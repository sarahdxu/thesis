#TG2 long format
trustlong<- trustdata %>%
gather(v, value, t1.x:t10.y) %>%
separate(v, c("var", "col")) %>%
arrange(ID) %>%
spread(col, value)
#Loop to get slope of each row
trustlong$x<-as.numeric(trustlong$x)
trustlong$y<-as.numeric(trustlong$y)
#ggplot(data=trustlong, aes(x=as.factor(x), y=y)) + geom_violin()
#ggplot(data=trustlong, aes(x=as.factor(x), y=y)) + geom_point() + facet_wrap(~ID)
#ggsave("~/Desktop/thesis/paper/images/linearity.pdf", width=11, height=8.5)
trustlong$reciprocity<-0
i<-1
j<-10
while (j<3971)
{
temp = trustlong[i:j,]
model = lm(temp$y~temp$x)
trustlong$reciprocity[i:j]<-model$coefficients[2]
i<- i+10
j<- j+10
}
trustlong<-trustlong[,c("ID", "reciprocity")]
trustlong<-unique(trustlong)
#merge data and trust data
data <- merge( trustlong,data, by="ID")
colnames(data)[2]<-"TG2"
#avg repayment rate
data<-merge(trust, data, by="ID")
#Remove entries where they accept and then reject -- doesn't make sense
i<-397
while (i>0){
j<-42
k<-43
{while (k<53){
if (data[i, j]=='Accept' & data[i, k] == 'Reject'){
data<-data[-i,]
}
j<-j+1
k<-k+1
}
}
i<-i-1
}
#UG2 as minimum pass rate player chooses to accept
i<-1
data$UG2<-0
while (i<344){
j<-42
while (j<53){
if (data[i,j] == 'Accept' & data[i,70]==0){
data[i,70]<-j-42
j<-53
}
else{j<-j+1}
}
i<-i+1
}
data$UG2<-data$UG2/10
#General Dictator game
data <- data[-c(4:11,13:20,64)]
data$p1 <- 1/2
data$p2 <- 1/3
data$p3 <- 2
data$p4 <- 1/2
data$p5 <- 3
data$p6 <- 1
data$p7 <- 2
data$p8 <- 4
data$p9 <- 1/4
data$m1 <- 15
data$m2 <- 10
data$m3 <- 15
data$m4 <- 12
data$m5 <- 10
data$m6 <- 15
data$m7 <- 12
data$m8 <- 10
data$m9 <- 10
data$gendict1<-as.numeric(data$gendict1)
data$gendict2<-as.numeric(data$gendict2)
data$gendict3<-as.numeric(data$gendict3)
data$gendict4<-as.numeric(data$gendict4)
data$gendict5<-as.numeric(data$gendict5)
data$gendict6<-as.numeric(data$gendict6)
data$gendict7<-as.numeric(data$gendict7)
data$gendict8<-as.numeric(data$gendict8)
data$gendict9<-as.numeric(data$gendict9)
data$gendict6[data$ID==281]<-15
data$gendict6[data$ID==65]<-15
data$gendict6[data$ID==96]<-15
data$gendict6[data$ID==108]<-15
data$gendict6[data$ID==154]<-15
data$gendict6[data$ID==358]<-15
data$gendict6[data$ID==16]<-12
data$gendict6[data$ID==81]<-13
data$pi_s1 <- data$m1-data$gendict1
data$pi_s2 <- data$m2-data$gendict2
data$pi_s3 <- data$m3-data$gendict3
data$pi_s4 <- data$m4-data$gendict4
data$pi_s5 <- data$m5-data$gendict5
data$pi_s6 <- data$m6-data$gendict6
data$pi_s7 <- data$m7-data$gendict7
data$pi_s8 <- data$m8-data$gendict8
data$pi_s9 <- data$m9-data$gendict9
data$Y1<-data$pi_s1
data$Y2<-data$pi_s2
data$Y3<-data$pi_s3
data$Y4<-data$pi_s4
data$Y5<-data$pi_s5
data$Y6<-data$pi_s6
data$Y7<-data$pi_s7
data$Y8<-data$pi_s8
data$Y9<-data$pi_s9
data$X1<-data$p1
data$X2<-data$p2
data$X3<-data$p3
data$X4<-data$p4
data$X5<-data$p5
data$X6<-data$p6
data$X7<-data$p7
data$X8<-data$p8
data$X9<-data$p9
gendictlong<-data[,c("ID", "X1", "Y1", "m1", "X2", "Y2", "m2","X3", "Y3", "m3", "X4", "Y4", "m4",
"X5", "Y5", "m5", "X6", "Y6", "m6", "X7", "Y7", "m7", "X8", "Y8", "m8", "X9", "Y9", "m9")]
names(gendictlong)<-c("ID", "g1.x", "g1.y","g1.m", "g2.x", "g2.y", "g2.m","g3.x", "g3.y","g3.m",
"g4.x", "g4.y", "g4.m","g5.x", "g5.y","g5.m", "g6.x", "g6.y","g6.m",
"g7.x", "g7.y", "g7.m","g8.x", "g8.y","g8.m", "g9.x", "g9.y","g9.m")
long<- gendictlong %>%
gather(v, value, g1.x:g9.m) %>%
separate(v, c("var", "col")) %>%
arrange(ID) %>%
spread(col, value)
for (i in long$ID){
temp<-long[long$ID==i,]
model<-nls(y~m*(A/((x^r)+A)), data=temp, start=c(A=1, r=-1),
algorithm="port",
control=nls.control(warnOnly=TRUE),
upper=c(A=Inf, r=0.9999), lower=c(A=-Inf,r=-Inf))
long$A[long$ID==i]<-coef(model)[1]
long$r[long$ID==i]<-coef(model)[2]
}
long<-long[,c("ID", "A", "r")]
long<-unique(long)
long$rho<-long$r/(long$r - 1)
long$alpha<-((long$A)^(1-long$rho))/(1+(long$A)^(1-long$rho))
long$sigma<-1/(long$rho - 1)
long$alpha[long$ID==96]<-0
long$alpha[long$ID==113]<-0
long$alpha[long$ID==281]<-0
long$alpha[long$ID==13]<-1
long$alpha[long$ID==87]<-1
long$alpha[long$ID==362]<-1
long<-long[,c("ID", "alpha", "rho", "sigma")]
data1<-merge(long, data, by="ID")
data<-data1[,c("ID", "ResponseId", "alpha", "rho", "sigma",  "TG2", "avgreturn", "UG1", "UG2", "TG1", "PGG",
"SRA1", "SRA2","SRA3", "SRA4", "SRA5", "SRA6", "SRA7", "SRA8", "SRA9", "SRA10",
"SRAtotal", "SRAmoney")]
donations = read.csv("donations.csv", stringsAsFactors=FALSE)
donations <- donations[-c(11:18, 20:67)]
data <- merge( data,donations, by="ResponseId")
data<-data[,c("ID", "ResponseId", "GENDER", "CLASS_YR", "MAJOR", "alpha", "rho",
"sigma", "TG2", "avgreturn", "UG1", "UG2", "TG1", "PGG",
"SRA1", "SRA2","SRA3", "SRA4", "SRA5", "SRA6", "SRA7", "SRA8", "SRA9", "SRA10",
"SRAtotal","SRAmoney", "current_donor_status",
"DNR_GIVING", "DNR_TOTAL_YEARS", "first_gift", "last_gift", "last_gift_amount", "last_gift_for")]
SRA<-ggplot(data=data, aes(data$SRAtotal))+
geom_bar(aes(y= 100*(..count..)/sum(..count..))) +
#  labs(title="Total SRA Scores") +
labs(x="Total Scores", y="Percent") +
scale_x_continuous(breaks=seq(20,50,2)) + ggtitle("Panel I: Total SRA Scores")
ggsave("~/Desktop/thesis/paper/images/SRAimg.jpg", width=11, height=8.5)
summary(data$SRAmoney)
SRAmoney<-ggplot(data=data, aes(data$SRAmoney))+
geom_bar(aes(y= 100*(..count..)/sum(..count..))) +
#  labs(title="Total SRA Scores") +
labs(x="SRA Money Scores", y="Percent") +ggtitle("Panel J: Total SRA Money Scores")+
ggsave("~/Desktop/thesis/paper/images/SRAmoney.jpg", width=11, height=8.5)
pdf("~/Desktop/thesis/paper/images/Figure3.pdf",width=11,height=8.5)
grid.arrange(SRA, SRAmoney, nrow=2)
dev.off()
#UG1
UG1<-ggplot(data=data, aes(data$UG1))+
geom_bar(aes(y= 100*(..count..)/sum(..count..))) +
#  labs(title="Total SRA Scores") +
ggtitle("Panel C: UG1") +
labs(x="Pass Rate", y="Percent") + ylim(c(0,45))+
scale_x_continuous(breaks=seq(0,1,0.1))
ggsave("~/Desktop/thesis/output/UG1.pdf", width=11, height=8.5)
#UG2
UG2<-ggplot(data=data, aes(data$UG2))+
geom_bar(aes(y= 100*(..count..)/sum(..count..))) +
#  labs(title="Total SRA Scores")
ggtitle("Panel D: UG2")+
labs(x="Minimum Contribution Accepted", y="Percent")+ylim(c(0,45))+
scale_x_continuous(breaks=seq(0,1,0.1))
ggsave("~/Desktop/thesis/output/UG2.pdf", width=11, height=8.5)
#TG1
TG1<-ggplot(data=data, aes(data$TG1))+
geom_bar(aes(y= 100*(..count..)/sum(..count..))) +ylim(c(0,45))+
#  labs(title="Total SRA Scores") +
labs(x="Pass Rate", y="Percent")+
scale_x_continuous(breaks=seq(0,1,0.1)) +
ggtitle("Panel E: TG1")
ggsave("~/Desktop/thesis/output/TG1.pdf", width=11, height=8.5)
#PGG
PGG<-ggplot(data=data, aes(data$PGG))+
geom_bar(aes(y= 100*(..count..)/sum(..count..))) +
#  labs(title="Total SRA Scores") +
labs(x="Pass Rate", y="Percent")+ylim(c(0,45))+
scale_x_continuous(breaks=seq(0,1,0.1)) +
ggtitle("Panel F: PGG")
ggsave("~/Desktop/thesis/output/PGG.pdf", width=11, height=8.5)
pdf("~/Desktop/thesis/paper/images/Figure2b.pdf",width=11,height=8.5)
grid.arrange(UG1, UG2, TG1, PGG, nrow=2)
dev.off()
#TG2 - reciprocity
TG2<-ggplot(data=data, aes(data$TG2)) +
geom_histogram(aes(y=100*(..count..)/sum(..count..)), binwidth=.05) +
labs(x="Reciprocity", y="Percent") +
ggtitle("Panel G: Reciprocity Levels") +
scale_x_continuous(breaks=seq(-0.5, 1, by=0.1)) + ylim(c(0,28))
ggsave("~/Desktop/thesis/paper/images/TG2.pdf", width=11, height=8.5)
TG<-ggplot(data=data, aes(data$avgreturn)) +
geom_histogram(aes(y=100*(..count..)/sum(..count..)), binwidth=0.05)+
ylim(c(0,28))+labs(x="Repayment Rate", y="Percent") + ggtitle("Panel H: Average Repayment Rate") +
scale_x_continuous(breaks=seq(0, 1, by=0.1))
ggsave("~/Desktop/thesis/paper/images/TG.pdf", width=11, height=8.5)
pdf("~/Desktop/thesis/paper/images/Figure2c.pdf",width=11,height=8.5)
grid.arrange(TG2, TG, nrow=2)
dev.off()
#donations dataset
data$donated<-1
data$donated[data$current_donor_status=="Never"]<-0
prop.table(table(data$donated))
donated<-ggplot(data=data, aes(data$donated))+
geom_bar(aes(y= 100*(..count..)/sum(..count..))) +
#  labs(title="Total SRA Scores") +
labs(x="Donated", y="Percent") + scale_x_continuous(breaks=seq(0,1,1)) + ylim(c(0,80))+
ggtitle("Panel K: Donations")
ggsave("~/Desktop/thesis/paper/images/donated.pdf", width=11, height=8.5)
data$donations<-as.numeric(data$DNR_GIVING)
data$d<-data$donations
data$d[data$d>100]<-120
d1<-data[data$donations>100,]
summary(data$donation)
donations<-ggplot(data=data, aes(data$d))+geom_histogram(aes(y=100*(..count..)/sum(..count..)), binwidth=10)+
labs(x="Donation Amount", y="Percent")+scale_x_continuous(breaks=seq(0,100,10))+
ylim(c(0,60))+
ggtitle("Panel L: Average Donation Amount")
ggsave("~/Desktop/thesis/paper/images/donations.pdf", width=11, height=8.5)
pdf("~/Desktop/thesis/paper/images/Figure4.pdf",width=11,height=8.5)
grid.arrange(donated, donations, nrow=2)
dev.off()
# e<-data[data$donation>625,]
# prop.table(table(e$donation))
# summary(data$donation)
#GDG
alpha<-ggplot(data=data, aes(data$alpha)) + geom_histogram(aes(y=100*(..count..)/sum(..count..)), binwidth=0.05)+
scale_x_continuous(breaks=seq(0, 1, by=0.1)) +
#ylim(c(0,28))+
labs(x="Alpha", y="Percent") +
ggtitle("Panel A: Alpha")
ggsave("~/Desktop/thesis/paper/images/alpha.pdf", width=11, height=8.5)
#data$rho1[data$rho1>1]<-NA
data1<-data
data1$rho1<-data1$rho
data1$rho1[data1$rho1<(-1)]<-(-1.25)
#data2<-data[data$rho>1,]
rho<-ggplot(data=data1, aes(x=rho1)) +
geom_histogram(aes(x=rho1, y=100*(..count..)/sum(..count..)), binwidth=0.05)+
#geom_histogram(aes(x=data1$rho1[data1$rho1==-1.25], y=100*(..count..)/sum(..count..)),binwidth=0.05)+
scale_x_continuous(breaks=seq(-1, 1, by=0.1)) +
labs(x="Rho", y="Percent") +
ggtitle("Panel B: Rho")
ggsave("~/Desktop/thesis/paper/images/rho.pdf", width=11, height=8.5)
# data2<-data[data$rho<=1 & data$rho>=-1,]
# plot(data2$rho, data2$alpha)
# fig<-ggplot(data2, aes(x=rho, y=alpha)) +
#   geom_point(size=2) + labs(x="Rho", y="Alpha") +
#   ggtitle("Panel C: Scatterplot of CES Parameters")
# sigma<-ggplot(data=data, aes(x=data$sigma)) +
#   geom_histogram(aes(x=data$sigma, y=100*(..count..)/sum(..count..)), binwidth=1)+
#   #geom_histogram(aes(x=data1$rho1[data1$rho1==-1.25], y=100*(..count..)/sum(..count..)),binwidth=0.05)+
#   scale_x_continuous(breaks=seq(-1, 1, by=0.1)) +
#   ylim(c(0,25))+
#   labs(x="Sigma", y="Percent") +
#   ggtitle("Panel C: Sigma")
pdf("~/Desktop/thesis/paper/images/Figure2a.pdf",width=11,height=8.5)
grid.arrange(alpha, rho, nrow=2)
dev.off()
dat<-data[,c("alpha", "UG1", "UG2", "TG1", "TG2", "PGG", "SRAtotal")]
library(xtable)
library(Hmisc)
corstars <-function(x, method=c("pearson", "spearman"), #removeTriangle=c("upper", "lower"),
result=c("none", "html", "latex")){
#Compute correlation matrix
require(Hmisc)
x <- as.matrix(x)
correlation_matrix<-rcorr(x, type=method[1])
R <- correlation_matrix$r # Matrix of correlation coeficients
p <- correlation_matrix$P # Matrix of p-value
## Define notions for significance levels; spacing is important.
#mystars <- ifelse(p < .0001, "****", ifelse(p < .001, "*** ", ifelse(p < .01, "**  ", ifelse(p < .05, "*   ", "    "))))
mystars <- ifelse(p < .01, "***", ifelse(p < .05, "**", ifelse(p<.1, "*", " ")))
## trunctuate the correlation matrix to two decimal
R <- format(round(cbind(rep(-1.11, ncol(x)), R), 2))[,-1]
## build a new matrix that includes the correlations with their apropriate stars
Rnew <- matrix(paste(R, mystars, sep=""), ncol=ncol(x))
diag(Rnew) <- paste(diag(R), " ", sep="")
rownames(Rnew) <- colnames(x)
colnames(Rnew) <- paste(colnames(x), "", sep="")
#   ## remove upper triangle of correlation matrix
#   if(removeTriangle[1]=="upper"){
#     Rnew <- as.matrix(Rnew)
#     Rnew[upper.tri(Rnew, diag = TRUE)] <- ""
#     Rnew <- as.data.frame(Rnew)
#   }
#
#   ## remove lower triangle of correlation matrix
#   else if(removeTriangle[1]=="lower"){
#     Rnew <- as.matrix(Rnew)
#     Rnew[lower.tri(Rnew, diag = TRUE)] <- ""
#     Rnew <- as.data.frame(Rnew)
#   }
#
## remove last column and return the correlation matrix
Rnew<-as.matrix(Rnew)
Rnew<-as.data.frame(Rnew)
Rnew <- cbind(Rnew[1:length(Rnew)])
if (result[1]=="none") return(Rnew)
else{
if(result[1]=="html") print(xtable(Rnew), type="html")
else print(xtable(Rnew), type="latex")
}
}
corstars(dat, method="pearson", result="latex")
dat1<-data[,c("alpha", "UG1", "UG2", "TG1", "TG2", "PGG", "SRAtotal", "SRAmoney")]
corstars(dat1, method="pearson", result="latex")
# regression
model1<-lm(donations~alpha, data=data)
model2<-lm(donations~UG1, data=data)
model3<-lm(donations~UG2, data=data)
model4<-lm(donations~TG1, data=data)
model5<-lm(donations~TG2, data=data)
model6<-lm(donations~PGG, data=data)
model7<-lm(donations~alpha+UG1+UG2+TG1+TG2+PGG, data=data)
model8<- lm(donations~SRAtotal, data=data)
model9<-lm(donations~SRAmoney, data=data)
model10 <- lm(donations ~ alpha + UG1 + UG2 + TG1 + TG2 + PGG + SRAtotal, data=data)
model11 <- lm(donations ~ alpha + UG1 + UG2 + TG1 + TG2 + PGG + SRAmoney, data=data)
stargazer(model1, model2, model3, model4, model5, model6, model7, type="latex",
dep.var.labels=c("Donations"),
covariate.labels=c("Alpha", "UG1", "UG2", "TG1",
"Reciprocity", "PGG"))
stargazer(model8, model9, model10, model11, type="latex",
dep.var.labels=c("Donations"),
covariate.labels=c("Alpha", "UG1", "UG2", "TG1",
"Reciprocity", "PGG", "SRAtotal", "SRAmoney"))
model12<-glm(donated~alpha, data=data)
model13<-glm(donated~UG1, data=data)
model14<-glm(donated~UG2, data=data)
model15<-glm(donated~TG1, data=data)
model16<-glm(donated~TG2, data=data)
model17<-glm(donated~PGG, data=data)
model18<-glm(donated~alpha+UG1+UG2+TG1+TG2+PGG, data=data)
model19<- glm(donated~SRAtotal, data=data)
model20<-glm(donated~SRAmoney, data=data)
model21 <- glm(donated ~ alpha + UG1 + UG2 + TG1 + TG2 + PGG + SRAtotal, data=data)
model22 <- glm(donated ~ alpha + UG1 + UG2 + TG1 + TG2 + PGG + SRAmoney, data=data)
stargazer(model12, model13, model14, model15, model16, model17, model18, type="latex",
dep.var.labels=c("Donated"),
covariate.labels=c("Alpha", "UG1", "UG2", "TG1",
"Reciprocity", "PGG"))
stargazer(model19, model20, model21, model22,type="latex",
dep.var.labels=c("Donated"),
covariate.labels=c("Alpha", "UG1", "UG2", "TG1",
"Reciprocity", "PGG", "SRAtotal", "SRAmoney"))
pR2(model22)
mse1 <- mean(model1$residuals^2)
mse2 <- mean(model2$residuals^2)
mse3 <- mean(model3$residuals^2)
mse4 <- mean(model4$residuals^2)
mse5 <- mean(model5$residuals^2)
mse6<-mean(model6$residuals^2)
mse7<-mean(model7$residuals^2)
mse8<-mean(model8$residuals^2)
mse9<-mean(model9$residuals^2)
mse10<-mean(model10$residuals^2)
mse11<-mean(model11$residuals^2)
mse12<-mean(model12$residuals^2)
mse13<-mean(model13$residuals^2)
mse14<-mean(model14$residuals^2)
mse15<-mean(model15$residuals^2)
mse16<-mean(model16$residuals^2)
mse17<-mean(model17$residuals^2)
mse18<-mean(model18$residuals^2)
mse19<-mean(model19$residuals^2)
mse20<-mean(model20$residuals^2)
mse21<-mean(model21$residuals^2)
mse22<-mean(model22$residuals^2)
#Best subset model selection with R
data1<-data[,c("donations", "alpha","rho", "sigma", "UG1", "UG2", "TG1", "TG2","avgreturn","PGG",
"SRA1", "SRA2","SRA3", "SRA4", "SRA5", "SRA6", "SRA7", "SRA8", "SRA9", "SRA10",
"SRAtotal", "SRAmoney")]
data2<-data[,c("donations", "alpha","UG1", "UG2", "TG1", "TG2","avgreturn","PGG",
"SRA1", "SRA2","SRA3", "SRA4", "SRA5", "SRA6", "SRA7", "SRA8", "SRA9", "SRA10",
"SRAtotal", "SRAmoney")]
data3<-data[,c("donations", "alpha","UG1", "UG2", "TG1", "TG2","avgreturn","PGG",
"SRAtotal", "SRAmoney")]
data4<-data[,c("donated", "alpha","UG1", "UG2", "TG1", "TG2","avgreturn","PGG",
"SRAtotal", "SRAmoney")]
data5<-data[,c("donated", "alpha","rho", "sigma", "UG1", "UG2", "TG1", "TG2","avgreturn","PGG",
"SRA1", "SRA2","SRA3", "SRA4", "SRA5", "SRA6", "SRA7", "SRA8", "SRA9", "SRA10",
"SRAtotal", "SRAmoney")]
pairs(data1)
cor(data1)
install.packages("leaps")
library(leaps)
library(AER)
library(censReg)
modela<-tobit(donations ~ alpha + UG1 + UG2 + TG1 + TG2 + PGG + SRAtotal, data=data, left=0)
modela
library(VGAM)
dat<-data[,c("donations", "alpha","rho", "UG1", "UG2", "TG1", "TG2", "PGG", "SRAmoney", "SRAtotal")]
summary(m<-vglm(donations~alpha+ UG1 + UG2 + TG1 + TG2 + PGG + SRAtotal,
tobit(Lower=0, Upper=50),data=dat))
summary(m<-vglm(donations~alpha+ UG1 + UG2 + TG1 + TG2 + PGG + SRAtotal,
tobit(Lower=0),data=dat))
modela
summary(m<-vglm(donations~alpha+ UG1 + UG2 + TG1 + TG2 + PGG + SRAtotal,
tobit(Lower=0),data=dat))
summary(m<-vglm(donations~alpha+ UG1 + UG2 + TG1 + TG2 + PGG + SRAtotal,
tobit(Upper=50),data=dat))
summary(m<-vglm(donations~alpha+ UG1 + UG2 + TG1 + TG2 + PGG + SRAtotal,
tobit(Lower=0,Upper=50),data=dat))
summary(data$donations)
stargazer(m, type="latex",
dep.var.labels=c("Donations"),
covariate.labels=c("Alpha", "UG1", "UG2", "TG1",
"Reciprocity", "PGG", "SRAtotal"))
summary(m<-vglm(donations~alpha+ UG1 + UG2 + TG1 + TG2 + PGG + SRAtotal,
tobit(Lower=0,Upper=50),data=dat))
summary(m<-vglm(donations~alpha,
tobit(Lower=0,Upper=50),data=dat))
summary(m<-vglm(donations~UG1,
tobit(Lower=0,Upper=50),data=dat))
summary(m<-vglm(donations~UG2,
tobit(Lower=0,Upper=50),data=dat))
summary(m<-vglm(donations~TG1,
tobit(Lower=0,Upper=50),data=dat))
summary(m<-vglm(donations~TG2,
tobit(Lower=0,Upper=50),data=dat))
summary(m<-vglm(donations~PGG,
tobit(Lower=0,Upper=50),data=dat))
summary(m<-vglm(donations~TG2,
tobit(Lower=0,Upper=50),data=dat))
summary(m<-vglm(donations~TG1,
tobit(Lower=0,Upper=50),data=dat))
summary(m<-vglm(donations~SRAtotal,
tobit(Lower=0,Upper=50),data=dat))
summary(m<-vglm(donations~alpha+ UG1 + UG2 + TG1 + TG2 + PGG + SRAtotal,
tobit(Lower=0,Upper=50),data=dat))
summary(m<-vglm(donations~alpha,
tobit(Lower=0,Upper=50),data=dat))
summary(m<-vglm(donations~UG1,
tobit(Lower=0,Upper=50),data=dat))
summary(m<-vglm(donations~UG2,
tobit(Lower=0,Upper=50),data=dat))
summary(m<-vglm(donations~TG1,
tobit(Lower=0,Upper=50),data=dat))
summary(m<-vglm(donations~TG2,
tobit(Lower=0,Upper=50),data=dat))
summary(m<-vglm(donations~PGG,
tobit(Lower=0,Upper=50),data=dat))
summary(m<-vglm(donations~SRAtotal,
tobit(Lower=0,Upper=50),data=dat))
summary(m<-vglm(donations~alpha+ UG1 + UG2 + TG1 + TG2 + PGG + SRAtotal,
tobit(Lower=0,Upper=50),data=dat))
stargazer(model1, model2, model3, model4, model5, model6, model8, model10 type="latex",
model1<-lm(donations~alpha, data=data)
model2<-lm(donations~UG1, data=data)
model3<-lm(donations~UG2, data=data)
model4<-lm(donations~TG1, data=data)
model5<-lm(donations~TG2, data=data)
model6<-lm(donations~PGG, data=data)
model7<-lm(donations~alpha+UG1+UG2+TG1+TG2+PGG, data=data)
model8<- lm(donations~SRAtotal, data=data)
model9<-lm(donations~SRAmoney, data=data)
model10 <- lm(donations ~ alpha + UG1 + UG2 + TG1 + TG2 + PGG + SRAtotal, data=data)
model11 <- lm(donations ~ alpha + UG1 + UG2 + TG1 + TG2 + PGG + SRAmoney, data=data)
stargazer(model1, model2, model3, model4, model5, model6, model8, model10, type="latex",
dep.var.labels=c("Donations"),
covariate.labels=c("Alpha", "UG1", "UG2", "TG1",
"Reciprocity", "PGG", "SRAtotal"))
summary(m<-vglm(donations~alpha,
tobit(Lower=0,Upper=50),data=dat))
summary(m<-vglm(donations~UG1,
tobit(Lower=0,Upper=50),data=dat))
summary(m<-vglm(donations~UG2,
tobit(Lower=0,Upper=50),data=dat))
summary(m<-vglm(donations~TG1,
tobit(Lower=0,Upper=50),data=dat))
summary(m<-vglm(donations~TG2,
tobit(Lower=0,Upper=50),data=dat))
summary(m<-vglm(donations~PGG,
tobit(Lower=0,Upper=50),data=dat))
summary(m<-vglm(donations~SRAtotal,
tobit(Lower=0,Upper=50),data=dat))
summary(m<-vglm(donations~alpha+ UG1 + UG2 + TG1 + TG2 + PGG + SRAtotal,
tobit(Lower=0,Upper=50),data=dat))
