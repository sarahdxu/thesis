names(data)[names(data)=='Q2_7'] <- 'SRA5'
names(data)[names(data)=='Q2_8'] <- 'SRA6'
names(data)[names(data)=='Q2_10'] <- 'SRA7'
names(data)[names(data)=='Q2_11'] <- 'SRA8'
names(data)[names(data)=='Q2_13'] <- 'SRA9'
names(data)[names(data)=='Q2_14'] <- 'SRA10'
#SRA scores to number values
data$SRA1[data$SRA1=="Never"] <- 1
data$SRA1[data$SRA1=="Once"] <- 2
data$SRA1[data$SRA1=="More than once"] <- 3
data$SRA1[data$SRA1=="Often"] <- 4
data$SRA1[data$SRA1=="Very often"] <- 5
data$SRA2[data$SRA2=="Never"] <- 1
data$SRA2[data$SRA2=="Once"] <- 2
data$SRA2[data$SRA2=="More than once"] <- 3
data$SRA2[data$SRA2=="Often"] <- 4
data$SRA2[data$SRA2=="Very often"] <- 5
data$SRA3[data$SRA3=="Never"] <- 1
data$SRA3[data$SRA3=="Once"] <- 2
data$SRA3[data$SRA3=="More than once"] <- 3
data$SRA3[data$SRA3=="Often"] <- 4
data$SRA3[data$SRA3=="Very often"] <- 5
data$SRA4[data$SRA4=="Never"] <- 1
data$SRA4[data$SRA4=="Once"] <- 2
data$SRA4[data$SRA4=="More than once"] <- 3
data$SRA4[data$SRA4=="Often"] <- 4
data$SRA4[data$SRA4=="Very often"] <- 5
data$SRA5[data$SRA5=="Never"] <- 1
data$SRA5[data$SRA5=="Once"] <- 2
data$SRA5[data$SRA5=="More than once"] <- 3
data$SRA5[data$SRA5=="Often"] <- 4
data$SRA5[data$SRA5=="Very often"] <- 5
data$SRA6[data$SRA6=="Never"] <- 1
data$SRA6[data$SRA6=="Once"] <- 2
data$SRA6[data$SRA6=="More than once"] <- 3
data$SRA6[data$SRA6=="Often"] <- 4
data$SRA6[data$SRA6=="Very often"] <- 5
data$SRA7[data$SRA7=="Never"] <- 1
data$SRA7[data$SRA7=="Once"] <- 2
data$SRA7[data$SRA7=="More than once"] <- 3
data$SRA7[data$SRA7=="Often"] <- 4
data$SRA7[data$SRA7=="Very often"] <- 5
data$SRA8[data$SRA8=="Never"] <- 1
data$SRA8[data$SRA8=="Once"] <- 2
data$SRA8[data$SRA8=="More than once"] <- 3
data$SRA8[data$SRA8=="Often"] <- 4
data$SRA8[data$SRA8=="Very often"] <- 5
data$SRA9[data$SRA9=="Never"] <- 1
data$SRA9[data$SRA9=="Once"] <- 2
data$SRA9[data$SRA9=="More than once"] <- 3
data$SRA9[data$SRA9=="Often"] <- 4
data$SRA9[data$SRA9=="Very often"] <- 5
data$SRA10[data$SRA10=="Never"] <- 1
data$SRA10[data$SRA10=="Once"] <- 2
data$SRA10[data$SRA10=="More than once"] <- 3
data$SRA10[data$SRA10=="Often"] <- 4
data$SRA10[data$SRA10=="Very often"] <- 5
data$SRA1<-as.numeric(data$SRA1)
data$SRA2<-as.numeric(data$SRA2)
data$SRA3<-as.numeric(data$SRA3)
data$SRA4<-as.numeric(data$SRA4)
data$SRA5<-as.numeric(data$SRA5)
data$SRA6<-as.numeric(data$SRA6)
data$SRA7<-as.numeric(data$SRA7)
data$SRA8<-as.numeric(data$SRA8)
data$SRA9<-as.numeric(data$SRA9)
data$SRA10<-as.numeric(data$SRA10)
data$ult1<-as.numeric(data$ult1)
data$trust1<-as.numeric(data$trust1)
data$public<-as.numeric(data$public)
data$SRAtotal<-data$SRA1+data$SRA2+data$SRA3+data$SRA4+data$SRA5+data$SRA6+
data$SRA7+data$SRA8+data$SRA9+data$SRA10
data$SRAmoney<-data$SRA2+data$SRA3+data$SRA4+data$SRA7
data$UG1 <- data$ult1/10
data$TG1 <- data$trust1/10
data$PGG <- data$public/10
#represent TG2
trustdata <- data[, c("ID", "trust2_1",  "trust2_2", "trust2_3", "trust2_4", "trust2_5", "trust2_6",
"trust2_7", "trust2_8", "trust2_9", "trust2_10")]
trustdata$trust1_1 <- 3
trustdata$trust1_2 <- 6
trustdata$trust1_3 <- 9
trustdata$trust1_4 <- 12
trustdata$trust1_5 <- 15
trustdata$trust1_6 <- 18
trustdata$trust1_7 <- 21
trustdata$trust1_8 <- 24
trustdata$trust1_9 <- 27
trustdata$trust1_10 <- 30
trustdata$trust2_1<-as.numeric(trustdata$trust2_1)
trustdata$trust2_2<-as.numeric(trustdata$trust2_2)
trustdata$trust2_3<-as.numeric(trustdata$trust2_3)
trustdata$trust2_4<-as.numeric(trustdata$trust2_4)
trustdata$trust2_5<-as.numeric(trustdata$trust2_5)
trustdata$trust2_6<-as.numeric(trustdata$trust2_6)
trustdata$trust2_7<-as.numeric(trustdata$trust2_7)
trustdata$trust2_8<-as.numeric(trustdata$trust2_8)
trustdata$trust2_9<-as.numeric(trustdata$trust2_9)
trustdata$trust2_10<-as.numeric(trustdata$trust2_10)
trustdata$t1<-(trustdata$trust2_1)/(trustdata$trust1_1)
trustdata$t2<-(trustdata$trust2_2)/(trustdata$trust1_2)
trustdata$t3<-(trustdata$trust2_3)/(trustdata$trust1_3)
trustdata$t4<-(trustdata$trust2_4)/(trustdata$trust1_4)
trustdata$t5<-(trustdata$trust2_5)/(trustdata$trust1_5)
trustdata$t6<-(trustdata$trust2_6)/(trustdata$trust1_6)
trustdata$t7<-(trustdata$trust2_7)/(trustdata$trust1_7)
trustdata$t8<-(trustdata$trust2_8)/(trustdata$trust1_8)
trustdata$t9<-(trustdata$trust2_9)/(trustdata$trust1_9)
trustdata$t10<-(trustdata$trust2_10)/(trustdata$trust1_10)
for (i in trustdata$ID){
temp<-trustdata[trustdata$ID==i,]
trustdata$avgreturn[trustdata$ID==i]<-(temp$t1+temp$t2+temp$t3+temp$t4+
temp$t5+temp$t6+temp$t7+
temp$t8+temp$t9+temp$t10)/10
}
trust<-trustdata
trust<-trust[,c("ID", "avgreturn")]
trustdata <- trustdata[,c("ID", "trust1_1", "trust2_1", "trust1_2", "trust2_2", "trust1_3", "trust2_3",
"trust1_4", "trust2_4", "trust1_5", "trust2_5", "trust1_6", "trust2_6",
"trust1_7", "trust2_7", "trust1_8", "trust2_8", "trust1_9", "trust2_9",
"trust1_10", "trust2_10")]
names(trustdata)<-c("ID","t1.x", "t1.y","t2.x", "t2.y","t3.x", "t3.y",
"t4.x", "t4.y","t5.x", "t5.y","t6.x", "t6.y","t7.x", "t7.y",
"t8.x", "t8.y","t9.x", "t9.y","t10.x", "t10.y")
#TG2 long format
trustlong<- trustdata %>%
gather(v, value, t1.x:t10.y) %>%
separate(v, c("var", "col")) %>%
arrange(ID) %>%
spread(col, value)
#Loop to get slope of each row
trustlong$x<-as.numeric(trustlong$x)
trustlong$y<-as.numeric(trustlong$y)
#ggplot(data=trustlong, aes(x=as.factor(x), y=y)) + geom_violin()
#ggplot(data=trustlong, aes(x=as.factor(x), y=y)) + geom_point() + facet_wrap(~ID)
#ggsave("~/Desktop/thesis/paper/images/linearity.pdf", width=11, height=8.5)
trustlong$reciprocity<-0
i<-1
j<-10
while (j<3971)
{
temp = trustlong[i:j,]
model = lm(temp$y~temp$x)
trustlong$reciprocity[i:j]<-model$coefficients[2]
i<- i+10
j<- j+10
}
trustlong<-trustlong[,c("ID", "reciprocity")]
trustlong<-unique(trustlong)
#merge data and trust data
data <- merge( trustlong,data, by="ID")
colnames(data)[2]<-"TG2"
#avg repayment rate
data<-merge(trust, data, by="ID")
#Remove entries where they accept and then reject -- doesn't make sense
i<-397
while (i>0){
j<-42
k<-43
{while (k<53){
if (data[i, j]=='Accept' & data[i, k] == 'Reject'){
data<-data[-i,]
}
j<-j+1
k<-k+1
}
}
i<-i-1
}
#UG2 as minimum pass rate player chooses to accept
i<-1
data$UG2<-0
while (i<344){
j<-42
while (j<53){
if (data[i,j] == 'Accept' & data[i,70]==0){
data[i,70]<-j-42
j<-53
}
else{j<-j+1}
}
i<-i+1
}
data$UG2<-data$UG2/10
#General Dictator game
data <- data[-c(4:11,13:20,64)]
data$p1 <- 1/2
data$p2 <- 1/3
data$p3 <- 2
data$p4 <- 1/2
data$p5 <- 3
data$p6 <- 1
data$p7 <- 2
data$p8 <- 4
data$p9 <- 1/4
data$m1 <- 15
data$m2 <- 10
data$m3 <- 15
data$m4 <- 12
data$m5 <- 10
data$m6 <- 15
data$m7 <- 12
data$m8 <- 10
data$m9 <- 10
data$gendict1<-as.numeric(data$gendict1)
data$gendict2<-as.numeric(data$gendict2)
data$gendict3<-as.numeric(data$gendict3)
data$gendict4<-as.numeric(data$gendict4)
data$gendict5<-as.numeric(data$gendict5)
data$gendict6<-as.numeric(data$gendict6)
data$gendict7<-as.numeric(data$gendict7)
data$gendict8<-as.numeric(data$gendict8)
data$gendict9<-as.numeric(data$gendict9)
data$gendict6[data$ID==281]<-15
data$gendict6[data$ID==65]<-15
data$gendict6[data$ID==96]<-15
data$gendict6[data$ID==108]<-15
data$gendict6[data$ID==154]<-15
data$gendict6[data$ID==358]<-15
data$gendict6[data$ID==16]<-12
data$gendict6[data$ID==81]<-13
data$pi_s1 <- data$m1-data$gendict1
data$pi_s2 <- data$m2-data$gendict2
data$pi_s3 <- data$m3-data$gendict3
data$pi_s4 <- data$m4-data$gendict4
data$pi_s5 <- data$m5-data$gendict5
data$pi_s6 <- data$m6-data$gendict6
data$pi_s7 <- data$m7-data$gendict7
data$pi_s8 <- data$m8-data$gendict8
data$pi_s9 <- data$m9-data$gendict9
data$Y1<-data$pi_s1
data$Y2<-data$pi_s2
data$Y3<-data$pi_s3
data$Y4<-data$pi_s4
data$Y5<-data$pi_s5
data$Y6<-data$pi_s6
data$Y7<-data$pi_s7
data$Y8<-data$pi_s8
data$Y9<-data$pi_s9
data$X1<-data$p1
data$X2<-data$p2
data$X3<-data$p3
data$X4<-data$p4
data$X5<-data$p5
data$X6<-data$p6
data$X7<-data$p7
data$X8<-data$p8
data$X9<-data$p9
gendictlong<-data[,c("ID", "X1", "Y1", "m1", "X2", "Y2", "m2","X3", "Y3", "m3", "X4", "Y4", "m4",
"X5", "Y5", "m5", "X6", "Y6", "m6", "X7", "Y7", "m7", "X8", "Y8", "m8", "X9", "Y9", "m9")]
names(gendictlong)<-c("ID", "g1.x", "g1.y","g1.m", "g2.x", "g2.y", "g2.m","g3.x", "g3.y","g3.m",
"g4.x", "g4.y", "g4.m","g5.x", "g5.y","g5.m", "g6.x", "g6.y","g6.m",
"g7.x", "g7.y", "g7.m","g8.x", "g8.y","g8.m", "g9.x", "g9.y","g9.m")
long<- gendictlong %>%
gather(v, value, g1.x:g9.m) %>%
separate(v, c("var", "col")) %>%
arrange(ID) %>%
spread(col, value)
for (i in long$ID){
temp<-long[long$ID==i,]
model<-nls(y~m*(A/((x^r)+A)), data=temp, start=c(A=1, r=-1),
algorithm="port",
control=nls.control(warnOnly=TRUE),
upper=c(A=Inf, r=0.9999), lower=c(A=-Inf,r=-Inf))
long$A[long$ID==i]<-coef(model)[1]
long$r[long$ID==i]<-coef(model)[2]
}
long<-long[,c("ID", "A", "r")]
long<-unique(long)
long$rho<-long$r/(long$r - 1)
long$alpha<-((long$A)^(1-long$rho))/(1+(long$A)^(1-long$rho))
long$sigma<-1/(long$rho - 1)
long$alpha[long$ID==96]<-0
long$alpha[long$ID==113]<-0
long$alpha[long$ID==281]<-0
long$alpha[long$ID==13]<-1
long$alpha[long$ID==87]<-1
long$alpha[long$ID==362]<-1
long<-long[,c("ID", "alpha", "rho", "sigma")]
data1<-merge(long, data, by="ID")
data<-data1[,c("ID", "ResponseId", "alpha", "rho", "sigma",  "TG2", "avgreturn", "UG1", "UG2", "TG1", "PGG",
"SRA1", "SRA2","SRA3", "SRA4", "SRA5", "SRA6", "SRA7", "SRA8", "SRA9", "SRA10",
"SRAtotal", "SRAmoney")]
donations = read.csv("donations.csv", stringsAsFactors=FALSE)
donations <- donations[-c(11:18, 20:67)]
data <- merge( data,donations, by="ResponseId")
data<-data[,c("ID", "ResponseId", "GENDER", "CLASS_YR", "MAJOR", "alpha", "rho",
"sigma", "TG2", "avgreturn", "UG1", "UG2", "TG1", "PGG",
"SRA1", "SRA2","SRA3", "SRA4", "SRA5", "SRA6", "SRA7", "SRA8", "SRA9", "SRA10",
"SRAtotal","SRAmoney", "current_donor_status",
"DNR_GIVING", "DNR_TOTAL_YEARS", "first_gift", "last_gift", "last_gift_amount", "last_gift_for")]
# data$UG1<-data$UG1*100
# data$UG2<-data$UG2*100
# data$TG1<-data$TG1*100
# data$PGG<-data$PGG*100
# data$TG2<-data$TG2*100
# data$alpha1<-data$alpha*100
# data$avgreturn<-data$avgreturn*100
#####################
#Univariate Analysis#
#####################
#SRA
SRA<-ggplot(data=data, aes(data$SRAtotal))+
geom_bar(aes(y= 100*(..count..)/sum(..count..))) +
#  labs(title="Total SRA Scores") +
labs(x="Total Scores", y="Percent") +
scale_x_continuous(breaks=seq(20,50,2)) + ggtitle("Panel I: Total SRA Scores")
ggsave("~/Desktop/thesis/paper/images/SRAimg.jpg", width=11, height=8.5)
summary(data$SRAmoney)
SRAmoney<-ggplot(data=data, aes(data$SRAmoney))+
geom_bar(aes(y= 100*(..count..)/sum(..count..))) +
#  labs(title="Total SRA Scores") +
labs(x="SRA Money Scores", y="Percent") +ggtitle("Panel J: Monetary SRA Scores")+
ggsave("~/Desktop/thesis/paper/images/SRAmoney.jpg", width=11, height=8.5)
pdf("~/Desktop/thesis/paper/images/Figure3.pdf",width=11,height=8.5)
grid.arrange(SRA, SRAmoney, nrow=2)
dev.off()
#UG1
UG1<-ggplot(data=data, aes(data$UG1))+
geom_bar(aes(y= 100*(..count..)/sum(..count..))) +
#  labs(title="Total SRA Scores") +
ggtitle("Panel C: Ultimatum Game Proposers") +
labs(x="Pass Rate", y="Percent") + ylim(c(0,45))+
scale_x_continuous(breaks=seq(0,1,0.1))
ggsave("~/Desktop/thesis/output/UG1.pdf", width=11, height=8.5)
#UG2
UG2<-ggplot(data=data, aes(data$UG2))+
geom_bar(aes(y= 100*(..count..)/sum(..count..))) +
#  labs(title="Total SRA Scores")
ggtitle("Panel D: Ultimatum Game Responders")+
labs(x="Minimum Contribution Accepted", y="Percent")+ylim(c(0,45))+
scale_x_continuous(breaks=seq(0,1,0.1))
ggsave("~/Desktop/thesis/output/UG2.pdf", width=11, height=8.5)
#TG1
TG1<-ggplot(data=data, aes(data$TG1))+
geom_bar(aes(y= 100*(..count..)/sum(..count..))) +ylim(c(0,45))+
#  labs(title="Total SRA Scores") +
labs(x="Pass Rate", y="Percent")+
scale_x_continuous(breaks=seq(0,1,0.1)) +
ggtitle("Panel E: Trust Game Proposers")
ggsave("~/Desktop/thesis/output/TG1.pdf", width=11, height=8.5)
#PGG
PGG<-ggplot(data=data, aes(data$PGG))+
geom_bar(aes(y= 100*(..count..)/sum(..count..))) +
#  labs(title="Total SRA Scores") +
labs(x="Pass Rate", y="Percent")+ylim(c(0,45))+
scale_x_continuous(breaks=seq(0,1,0.1)) +
ggtitle("Panel F: Public Goods Game")
ggsave("~/Desktop/thesis/output/PGG.pdf", width=11, height=8.5)
pdf("~/Desktop/thesis/paper/images/Figure2b.pdf",width=11,height=8.5)
grid.arrange(UG1, UG2, TG1, PGG, nrow=2)
dev.off()
#TG2 - reciprocity
TG2<-ggplot(data=data, aes(data$TG2)) +
geom_histogram(aes(y=100*(..count..)/sum(..count..)), binwidth=.05) +
labs(x="Reciprocity", y="Percent") +
ggtitle("Panel G: Reciprocity Levels") +
scale_x_continuous(breaks=seq(-0.5, 1, by=0.1)) + ylim(c(0,28))
ggsave("~/Desktop/thesis/paper/images/TG2.pdf", width=11, height=8.5)
TG<-ggplot(data=data, aes(data$avgreturn)) +
geom_histogram(aes(y=100*(..count..)/sum(..count..)), binwidth=0.05)+
ylim(c(0,28))+labs(x="Repayment Rate", y="Percent") + ggtitle("Panel H: Average Repayment Rate") +
scale_x_continuous(breaks=seq(0, 1, by=0.1))
ggsave("~/Desktop/thesis/paper/images/TG.pdf", width=11, height=8.5)
pdf("~/Desktop/thesis/paper/images/Figure2c.pdf",width=11,height=8.5)
grid.arrange(TG2, TG, nrow=2)
dev.off()
#donations dataset
data$donated<-1
data$donated[data$current_donor_status=="Never"]<-0
prop.table(table(data$donated))
donated<-ggplot(data=data, aes(data$donated))+
geom_bar(aes(y= 100*(..count..)/sum(..count..))) +
#  labs(title="Total SRA Scores") +
labs(x="Donated", y="Percent") + scale_x_continuous(breaks=seq(0,1,1)) + ylim(c(0,80))+
ggtitle("Panel K: Donations")
ggsave("~/Desktop/thesis/paper/images/donated.pdf", width=11, height=8.5)
data$donations<-as.numeric(data$DNR_GIVING)
data$d<-data$donations
data$d[data$d>100]<-120
d1<-data[data$donations>100,]
summary(data$donation)
donations<-ggplot(data=data, aes(data$d))+geom_histogram(aes(y=100*(..count..)/sum(..count..)), binwidth=10)+
labs(x="Donations", y="Percent")+scale_x_continuous(breaks=seq(0,100,10))+
ylim(c(0,60))+
ggtitle("Panel K: Total Donations")
ggsave("~/Desktop/thesis/paper/images/donations.pdf", width=11, height=8.5)
logdonations<-ggplot(data=data, aes(data$donations))+geom_histogram(aes(y=100*(..count..)/sum(..count..)), binwidth=0.5)+
labs(x="Log(Donations)", y="Percent")+scale_x_continuous(breaks=seq(-6,10,2))+
ggtitle("Panel L: Log of Total Donations")
data$avgdonations<-0
data$avgdonations[data$CLASS_YR=="2018"]<-data$donations1[data$CLASS_YR=="2018"]
data$avgdonations[data$CLASS_YR=="2017"]<-data$donations1[data$CLASS_YR=="2017"]/2
data$avgdonations[data$CLASS_YR=="2016"]<-data$donations1[data$CLASS_YR=="2016"]/3
data$avgdonations[data$CLASS_YR=="2015"]<-data$donations1[data$CLASS_YR=="2015"]/4
data$avgdonations[data$CLASS_YR=="2014"]<-data$donations1[data$CLASS_YR=="2014"]/5
data$avgdonations[data$CLASS_YR=="2013"]<-data$donations1[data$CLASS_YR=="2013"]/6
avgdonations<-ggplot(data=data, aes(data$avgdonations))+geom_histogram(aes(y=100*(..count..)/sum(..count..)))+
labs(x="Average Donations)", y="Percent")+
ggtitle("Panel L: Log of Total Donations")
pdf("~/Desktop/thesis/paper/images/Figure4.pdf",width=11,height=8.5)
grid.arrange(donations, logdonations, nrow=2)
dev.off()
logdonations
data$donations
data$donations1<-data$donations
data$donations<-log(data$donations)
data$donations[data$donations==-Inf]<-NA
logdonations<-ggplot(data=data, aes(data$donations))+geom_histogram(aes(y=100*(..count..)/sum(..count..)), binwidth=0.5)+
labs(x="Log(Donations)", y="Percent")+scale_x_continuous(breaks=seq(-6,10,2))+
ggtitle("Panel L: Log of Total Donations")
logdonations
pdf("~/Desktop/thesis/paper/images/Figure4.pdf",width=11,height=8.5)
grid.arrange(donations, logdonations, nrow=2)
dev.off()
data$split<-0
data$split[data$CLASS_YR=='2017']<-1
data$split[data$CLASS_YR=='2018']<-5
train<-data[data$split==0,]
test<-data[data$split==1,]
train<-na.omit(train)
test<-na.omit(test)
lbw.for.lm<-within(train, {
y<-donations
ID<-NULL
ResponseId<-NULL
GENDER<-NULL
CLASS_YR<-NULL
MAJOR<-NULL
current_donor_status<-NULL
DNR_GIVING<-NULL
DNR_TOTAL_YEARS<-NULL
first_gift<-NULL
last_gift<-NULL
last_gift_amount<-NULL
last_gift_for<-NULL
donations<-NULL
d<-NULL
donations1<-NULL
split<-NULL
sigma<-NULL
donated<-NULL
#   SRAtotal<-NULL
#   SRAmoney<-NULL
donations2<-NULL
donatoins2<-NULL
rho<-NULL
avgdonations<-NULL
yr2018<-NULL
yr2017<-NULL
yr2016<-NULL
yr2015<-NULL
yr2014<-NULL
yr2013<-NULL
gender1<-NULL
major1<-NULL
humanities<-NULL
social<-NULL
stem<-NULL
#   SRA1<-NULL
#   SRA2<-NULL
#   SRA3<-NULL
#   SRA4<-NULL
#   SRA5<-NULL
#   SRA6<-NULL
#   SRA7<-NULL
#   SRA8<-NULL
#   SRA9<-NULL
#   SRA10<-NULL
})
lbw.for.lm<-na.omit(lbw.for.lm)
lbw.for.lm<-within(lbw.for.lm, {
SRAtotal<-NULL
SRAmoney<-NULL
})
x<-model.matrix(y~.,lbw.for.lm)[,-1]
y<-lbw.for.lm$y
cv.out<-cv.glmnet(x,y,alpha=1,type.measure="mse")
lambda_min<-cv.out$lambda.min
library(glmnet)
x<-model.matrix(y~.,lbw.for.lm)[,-1]
y<-lbw.for.lm$y
cv.out<-cv.glmnet(x,y,alpha=1,type.measure="mse")
lambda_min<-cv.out$lambda.min
lambda_1se<-cv.out$lambda.1se
coef(cv.out,s=lambda_min)
x<-model.matrix(y~.,lbw.for.lm)[,-1]
y<-lbw.for.lm$y
cv.out<-cv.glmnet(x,y,alpha=1,type.measure="mse")
lambda_min<-cv.out$lambda.min
lambda_1se<-cv.out$lambda.1se
coef(cv.out,s=lambda_min)
x<-model.matrix(y~.,lbw.for.lm)[,-1]
y<-lbw.for.lm$y
cv.out<-cv.glmnet(x,y,alpha=1,type.measure="mse")
lambda_min<-cv.out$lambda.min
lambda_1se<-cv.out$lambda.1se
coef(cv.out,s=lambda_min)
x<-model.matrix(y~.,lbw.for.lm)[,-1]
y<-lbw.for.lm$y
cv.out<-cv.glmnet(x,y,alpha=1,type.measure="mse")
lambda_min<-cv.out$lambda.min
lambda_1se<-cv.out$lambda.1se
coef(cv.out,s=lambda_min)
m<-lars(x,y,type="lasso")
library(lars)
m<-lars(x,y,type="lasso")
covTest(m,x,y)
library(covTest)
m<-lars(x,y,type="lasso")
covTest(m,x,y)
coef(cv.out,s=lambda_min)
