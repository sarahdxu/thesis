x<-model.matrix(y~.,lbw.for.lm)[,-1]
y<-lbw.for.lm$y
cv.out<-cv.glmnet(x,y,alpha=1,type.measure="mse")
lambda_min<-cv.out$lambda.min
lambda_1se<-cv.out$lambda.1se
coef(cv.out,s=lambda_min)
coef(cv.out,s=lambda_1se)
x<-model.matrix(y~.,lbw.for.lm)[,-1]
y<-lbw.for.lm$y
cv.out<-cv.glmnet(x,y,alpha=1,type.measure="mse")
lambda_min<-cv.out$lambda.min
lambda_1se<-cv.out$lambda.1se
coef(cv.out,s=lambda_min)
coef(cv.out,s=lambda_1se)
x<-model.matrix(y~.,lbw.for.lm)[,-1]
y<-lbw.for.lm$y
cv.out<-cv.glmnet(x,y,alpha=1,type.measure="mse")
lambda_min<-cv.out$lambda.min
lambda_1se<-cv.out$lambda.1se
coef(cv.out,s=lambda_min)
coef(cv.out,s=lambda_1se)
x<-model.matrix(y~.,lbw.for.lm)[,-1]
y<-lbw.for.lm$y
cv.out<-cv.glmnet(x,y,alpha=1,type.measure="mse")
lambda_min<-cv.out$lambda.min
lambda_1se<-cv.out$lambda.1se
coef(cv.out,s=lambda_min)
coef(cv.out,s=lambda_1se)
x<-model.matrix(y~.,lbw.for.lm)[,-1]
y<-lbw.for.lm$y
cv.out<-cv.glmnet(x,y,alpha=1,type.measure="mse")
lambda_min<-cv.out$lambda.min
lambda_1se<-cv.out$lambda.1se
coef(cv.out,s=lambda_min)
coef(cv.out,s=lambda_1se)
x<-model.matrix(y~.,lbw.for.lm)[,-1]
y<-lbw.for.lm$y
cv.out<-cv.glmnet(x,y,alpha=1,type.measure="mse")
lambda_min<-cv.out$lambda.min
lambda_1se<-cv.out$lambda.1se
coef(cv.out,s=lambda_min)
coef(cv.out,s=lambda_1se)
x<-model.matrix(y~.,lbw.for.lm)[,-1]
y<-lbw.for.lm$y
cv.out<-cv.glmnet(x,y,alpha=1,type.measure="mse")
lambda_min<-cv.out$lambda.min
lambda_1se<-cv.out$lambda.1se
coef(cv.out,s=lambda_min)
coef(cv.out,s=lambda_1se)
x<-model.matrix(y~.,lbw.for.lm)[,-1]
y<-lbw.for.lm$y
cv.out<-cv.glmnet(x,y,alpha=1,type.measure="mse")
lambda_min<-cv.out$lambda.min
lambda_1se<-cv.out$lambda.1se
coef(cv.out,s=lambda_min)
coef(cv.out,s=lambda_1se)
x<-model.matrix(y~.,lbw.for.lm)[,-1]
y<-lbw.for.lm$y
cv.out<-cv.glmnet(x,y,alpha=1,type.measure="mse")
lambda_min<-cv.out$lambda.min
lambda_1se<-cv.out$lambda.1se
coef(cv.out,s=lambda_min)
coef(cv.out,s=lambda_1se)
x<-model.matrix(y~.,lbw.for.lm)[,-1]
y<-lbw.for.lm$y
cv.out<-cv.glmnet(x,y,alpha=1,type.measure="mse")
lambda_min<-cv.out$lambda.min
lambda_1se<-cv.out$lambda.1se
coef(cv.out,s=lambda_min)
coef(cv.out,s=lambda_1se)
x<-model.matrix(y~.,lbw.for.lm)[,-1]
y<-lbw.for.lm$y
cv.out<-cv.glmnet(x,y,alpha=1,type.measure="mse")
lambda_min<-cv.out$lambda.min
lambda_1se<-cv.out$lambda.1se
coef(cv.out,s=lambda_min)
coef(cv.out,s=lambda_1se)
x<-model.matrix(y~.,lbw.for.lm)[,-1]
y<-lbw.for.lm$y
cv.out<-cv.glmnet(x,y,alpha=1,type.measure="mse")
lambda_min<-cv.out$lambda.min
lambda_1se<-cv.out$lambda.1se
coef(cv.out,s=lambda_min)
x<-model.matrix(y~.,lbw.for.lm)[,-1]
y<-lbw.for.lm$y
cv.out<-cv.glmnet(x,y,alpha=1,type.measure="mse")
lambda_min<-cv.out$lambda.min
lambda_1se<-cv.out$lambda.1se
coef(cv.out,s=lambda_min)
yhat<-predict(cv.out,s=lambda_min,newx=xtest)
mse<-mean((ytest-yhat)^2)
x<-model.matrix(y~.,lbw.for.lm)[,-1]
y<-lbw.for.lm$y
cv.out<-cv.glmnet(x,y,alpha=1,type.measure="mse")
lambda_min<-cv.out$lambda.min
lambda_1se<-cv.out$lambda.1se
coef(cv.out,s=lambda_min)
x<-model.matrix(y~.,lbw.for.lm)[,-1]
y<-lbw.for.lm$y
cv.out<-cv.glmnet(x,y,alpha=1,type.measure="mse")
lambda_min<-cv.out$lambda.min
lambda_1se<-cv.out$lambda.1se
coef(cv.out,s=lambda_min)
yhat<-predict(cv.out,s=lambda_min,newx=xtest)
mse<-mean((ytest-yhat)^2)
set<-data[,c("donated", "alpha", "rho", "UG1", "UG2",
"TG1", "TG2", "avgreturn", "PGG", "SRA1",
"SRA2", "SRA3", "SRA4", "SRA5", "SRA6",
"SRA7", "SRA8", "SRA9", "SRA10")]
x<-model.matrix(donated~.,set)
y<-set$donated
cv.out<-cv.glmnet(x,y,alpha=1,family="binomial",
type.measure="mse")
lambda_min<-cv.out$lambda.min
lambda_1se<-cv.out$lambda.1se
coef(cv.out,s=lambda_1se)
coef(cv.out,s=lambda_min)
library(lars)
library(covTest)
x<-model.matrix(donated~.,set)[,-1]
y<-set$donated
cv.out<-cv.glmnet(x,y,alpha=1,family="binomial",
type.measure="mse")
lambda_min<-cv.out$lambda.min
lambda_1se<-cv.out$lambda.1se
coef(cv.out,s=lambda_1se)
coef(cv.out,s=lambda_min)
m<-lars(x,y,type="lasso")
m
covTest(m,x,y)
summary(m)
summary.lars(m)
covTest(m,x,y)
model12<-glm(donated~alpha, data=train)
model13<-glm(donated~rho,data=train)
model14<-glm(donated~UG1, data=train)
pR2(model14)
model15<-glm(donated~UG2, data=train)
pR2(model15)
model16<-glm(donated~TG1, data=train)
pR2(model16)
model17<-glm(donated~TG2, data=train)
pR2(model17)
model18<-glm(donated~PGG, data=train)
pR2(model18)
model19<-glm(donated~alpha+rho+UG1+UG2+TG1+TG2+PGG, data=train)
pR2(model19)
model20<- glm(donated~SRAtotal, data=train)
pR2(model20)
model21<-glm(donated~SRAmoney, data=train)
pR2(model21)
model22 <- glm(donated ~ alpha +rho+ UG1 + UG2 + TG1 + TG2 + PGG + SRAtotal, data=train)
pR2(model22)
model23 <- glm(donated ~ alpha+rho + UG1 + UG2 + TG1 + TG2 + PGG + SRAmoney, data=train)
pR2(model23)
stargazer(model12, model13, model14, model15, model16, model17,model18,model19,model20,model21,model22,model23, type="latex",
dep.var.labels=c("Donated"),
covariate.labels=c("Alpha", "Rho","Ultimatum1", "Ultimatum2", "Trust1",
"Trust2", "Cooperation","SRAtotal", "SRAmoney"))
library(stargazer)
stargazer(model12, model13, model14, model15, model16, model17,model18,model19,model20,model21,model22,model23, type="latex",
dep.var.labels=c("Donated"),
covariate.labels=c("Alpha", "Rho","Ultimatum1", "Ultimatum2", "Trust1",
"Trust2", "Cooperation","SRAtotal", "SRAmoney"))
mean((test$donated - predict.lm(model12, test)) ^ 2)
mean((test$donated - predict.lm(model13, test)) ^ 2)
mean((test$donated - predict.lm(model14, test)) ^ 2)
mean((test$donated - predict.lm(model15, test)) ^ 2)
mean((test$donated - predict.lm(model16, test)) ^ 2)
mean((test$donated - predict.lm(model17, test)) ^ 2)
mean((test$donated - predict.lm(model18, test)) ^ 2)
mean((test$donated - predict.lm(model19, test)) ^ 2)
mean((test$donated - predict.lm(model20, test)) ^ 2)
mean((test$donated - predict.lm(model21, test)) ^ 2)
mean((test$donated - predict.lm(model22, test)) ^ 2)
mean((test$donated - predict.lm(model23, test)) ^ 2)
lbw.for.logistic<-within(train, {
y<-donated
ID<-NULL
ResponseId<-NULL
GENDER<-NULL
CLASS_YR<-NULL
MAJOR<-NULL
current_donor_status<-NULL
DNR_GIVING<-NULL
DNR_TOTAL_YEARS<-NULL
first_gift<-NULL
last_gift<-NULL
last_gift_amount<-NULL
last_gift_for<-NULL
donations<-NULL
d<-NULL
donations1<-NULL
split<-NULL
sigma<-NULL
donated<-NULL
SRAtotal<-NULL
SRAmoney<-NULL
#   SRA1<-NULL
#   SRA2<-NULL
#   SRA3<-NULL
#   SRA4<-NULL
#   SRA5<-NULL
#   SRA6<-NULL
#   SRA7<-NULL
#   SRA8<-NULL
#   SRA9<-NULL
#   SRA10<-NULL
})
res.bestglm<-
bestglm(Xy=lbw.for.logistic,
family=gaussian,
IC="AIC",
method="exhaustive")
res.bestglm$BestModels
best.model.log1<-glm(donated~alpha+SRA3+SRA4,data=train)
best.model.log2<-glm(donated~alpha+UG2+SRA3+SRA4,data=train)
best.model.log3<-glm(donated~alpha+avgreturn+UG2+SRA3+SRA4,data=train)
best.model.log4<-glm(donated~alpha+SRA3+SRA4+SRA10,data=train)
best.model.log5<-glm(donated~UG2+SRA3+SRA4,data=train)
best.model.log1<-glm(donated~alpha+SRA3+SRA4,data=train)
best.model.log2<-glm(donated~alpha+UG2+SRA3+SRA4,data=train)
best.model.log3<-glm(donated~alpha+UG2+avgreturn+SRA3+SRA4,data=train)
best.model.log4<-glm(donated~alpha+SRA3+SRA4+SRA10,data=train)
best.model.log5<-glm(donated~UG2+SRA3+SRA4,data=train)
stargazer(best.model.log3, best.model.log2, best.model.log5, best.model.log4, best.model.log1,model21,model22,model23, type="latex",
dep.var.labels=c("Donated"),
covariate.labels=c("Alpha",
"Ultimatum2",
"Avg Return",
"SRA3", "SRA4", "SR10"))
stargazer(best.model.log3, best.model.log2, best.model.log5, best.model.log4, best.model.log1,type="latex",
dep.var.labels=c("Donated"),
covariate.labels=c("Alpha",
"Ultimatum2",
"Avg Return",
"SRA3", "SRA4", "SR10"))
mean((test$donated - predict.lm(best.model.log3, test)) ^ 2)
mean((test$donated - predict.lm(best.model.log2, test)) ^ 2)
mean((test$donated - predict.lm(best.model.log5, test)) ^ 2)
mean((test$donated - predict.lm(best.model.log4, test)) ^ 2)
mean((test$donated - predict.lm(best.model.log1, test)) ^ 2)
x<-model.matrix(y~.,lbw.for.logistic)[,-1]
y<-lbw.for.logistic$y
cv.out<-cv.glmnet(x,y,alpha=1,type.measure="mse")
lambda_min<-cv.out$lambda.min
lambda_1se<-cv.out$lambda.1se
coef(cv.out,s=lambda_min)
coef(cv.out,s=lambda_1se)
x<-model.matrix(y~.,lbw.for.logistic)[,-1]
y<-lbw.for.logistic$y
cv.out<-cv.glmnet(x,y,alpha=1,type.measure="mse")
lambda_min<-cv.out$lambda.min
lambda_1se<-cv.out$lambda.1se
coef(cv.out,s=lambda_min)
x<-model.matrix(y~.,lbw.for.logistic)[,-1]
y<-lbw.for.logistic$y
cv.out<-cv.glmnet(x,y,alpha=1,type.measure="mse")
lambda_min<-cv.out$lambda.min
lambda_1se<-cv.out$lambda.1se
coef(cv.out,s=lambda_min)
lbw.for.logistic1<-within(test, {
y<-donated
ID<-NULL
ResponseId<-NULL
GENDER<-NULL
CLASS_YR<-NULL
MAJOR<-NULL
current_donor_status<-NULL
DNR_GIVING<-NULL
DNR_TOTAL_YEARS<-NULL
first_gift<-NULL
last_gift<-NULL
last_gift_amount<-NULL
last_gift_for<-NULL
donations<-NULL
d<-NULL
donations1<-NULL
split<-NULL
sigma<-NULL
donated<-NULL
SRAtotal<-NULL
SRAmoney<-NULL
#   SRA1<-NULL
#   SRA2<-NULL
#   SRA3<-NULL
#   SRA4<-NULL
#   SRA5<-NULL
#   SRA6<-NULL
#   SRA7<-NULL
#   SRA8<-NULL
#   SRA9<-NULL
#   SRA10<-NULL
})
xtest<-model.matrix(y~.,lbw.for.logistic1)[,-1]
ytest<-test$donated
yhat<-predict(cv.out,s=lambda_min,newx=xtest)
mse<-mean((ytest-yhat)^2)
mse
m1<-lm(donated~alpha+UG2+SRA3+SRA4, data=data)
stargazer(m1,type="latex",
dep.var.labels=c("Donated"),
covariate.labels=c("Alpha",
"Ultimatum2",
"SRA3", "SRA4"))
m<-lars(x,y,type="lasso")
covTest(m,x,y)
View(lbw.for.lm1)
mse<-mean((ytest-yhat)^2)
mse
model12<-lm(donations~alpha, data=train)
pR2(model12)
model13<-glm(donations~rho,data=train)
pR2(model13)
model14<-glm(donations~UG1, data=train)
pR2(model14)
model15<-glm(donations~UG2, data=train)
pR2(model15)
model16<-glm(donations~TG1, data=train)
pR2(model16)
model17<-glm(donations~TG2, data=train)
pR2(model17)
model18<-glm(donations~PGG, data=train)
pR2(model18)
model19<-glm(donations~alpha+rho+UG1+UG2+TG1+TG2+PGG, data=train)
pR2(model19)
model20<- glm(donations~SRAtotal, data=train)
pR2(model20)
model21<-glm(donations~SRAmoney, data=train)
pR2(model21)
model22 <- glm(donations ~ alpha +rho+ UG1 + UG2 + TG1 + TG2 + PGG + SRAtotal, data=train)
pR2(model22)
model23 <- glm(donations ~ alpha+rho + UG1 + UG2 + TG1 + TG2 + PGG + SRAmoney, data=train)
pR2(model23)
stargazer(model12, model13, model14, model15, model16, model17,model18,model19,model20,model21,model22,model23, type="latex",
dep.var.labels=c("Log(Donations)"),
covariate.labels=c("Alpha", "Rho","Ultimatum1", "Ultimatum2", "Trust1",
"Trust2", "Cooperation","SRAtotal", "SRAmoney"))
mean((test$donated - predict.lm(model12, test)) ^ 2)
mean((test$donated - predict.lm(model13, test)) ^ 2)
mean((test$donated - predict.lm(model14, test)) ^ 2)
mean((test$donated - predict.lm(model15, test)) ^ 2)
mean((test$donated - predict.lm(model16, test)) ^ 2)
mean((test$donated - predict.lm(model17, test)) ^ 2)
mean((test$donated - predict.lm(model18, test)) ^ 2)
mean((test$donated - predict.lm(model19, test)) ^ 2)
mean((test$donated - predict.lm(model20, test)) ^ 2)
mean((test$donated - predict.lm(model21, test)) ^ 2)
mean((test$donated - predict.lm(model22, test)) ^ 2)
mean((test$donated - predict.lm(model23, test)) ^ 2)
model12<-lm(donations~alpha, data=train)
pR2(model12)
model13<-lm(donations~rho,data=train)
pR2(model13)
model14<-lm(donations~UG1, data=train)
pR2(model14)
model15<-lm(donations~UG2, data=train)
pR2(model15)
model16<-lm(donations~TG1, data=train)
pR2(model16)
model17<-lm(donations~TG2, data=train)
pR2(model17)
model18<-lm(donations~PGG, data=train)
pR2(model18)
model19<-lm(donations~alpha+rho+UG1+UG2+TG1+TG2+PGG, data=train)
pR2(model19)
model20<- lm(donations~SRAtotal, data=train)
pR2(model20)
model21<-lm(donations~SRAmoney, data=train)
pR2(model21)
model22 <- lm(donations ~ alpha +rho+ UG1 + UG2 + TG1 + TG2 + PGG + SRAtotal, data=train)
pR2(model22)
model23 <- lm(donations ~ alpha+rho + UG1 + UG2 + TG1 + TG2 + PGG + SRAmoney, data=train)
stargazer(model12, model13, model14, model15, model16, model17,model18,model19,model20,model21,model22,model23, type="latex",
dep.var.labels=c("Log(Donations)"),
covariate.labels=c("Alpha", "Rho","Ultimatum1", "Ultimatum2", "Trust1",
"Trust2", "Cooperation","SRAtotal", "SRAmoney"))
mean((test$donated - predict.lm(model12, test)) ^ 2)
mean((test$donated - predict.lm(model13, test)) ^ 2)
mean((test$donated - predict.lm(model14, test)) ^ 2)
mean((test$donated - predict.lm(model15, test)) ^ 2)
mean((test$donated - predict.lm(model16, test)) ^ 2)
mean((test$donated - predict.lm(model17, test)) ^ 2)
mean((test$donated - predict.lm(model18, test)) ^ 2)
mean((test$donated - predict.lm(model20, test)) ^ 2)
mean((test$donated - predict.lm(model21, test)) ^ 2)
mean((test$donated - predict.lm(model23, test)) ^ 2)
lbw.for.lm<-within(train, {
y<-donations
ID<-NULL
ResponseId<-NULL
GENDER<-NULL
CLASS_YR<-NULL
MAJOR<-NULL
current_donor_status<-NULL
DNR_GIVING<-NULL
DNR_TOTAL_YEARS<-NULL
first_gift<-NULL
last_gift<-NULL
last_gift_amount<-NULL
last_gift_for<-NULL
donations<-NULL
d<-NULL
donations1<-NULL
split<-NULL
sigma<-NULL
donated<-NULL
SRAtotal<-NULL
SRAmoney<-NULL
#   SRA1<-NULL
#   SRA2<-NULL
#   SRA3<-NULL
#   SRA4<-NULL
#   SRA5<-NULL
#   SRA6<-NULL
#   SRA7<-NULL
#   SRA8<-NULL
#   SRA9<-NULL
#   SRA10<-NULL
})
lbw.for.lm<-na.omit(lbw.for.lm)
res.bestglm<-
bestglm(Xy=lbw.for.lm,
family=gaussian,
IC="AIC",
method="exhaustive")
res.bestglm$BestModels
best.model.lm1<-lm(donations~TG2+UG1+SRA3+SRA4+SRA5+SRA6,data=train)
best.model.lm2<-lm(donations~TG2+UG1+UG2+SRA3+SRA4+SRA5+SRA6,data=train)
best.model.lm3<-lm(donations~TG2+UG1+SRA3+SRA4+SRA5+SRA6+SRA10,data=train)
best.model.lm4<-lm(donations~TG2+UG1+TG1+SRA3+SRA4+SRA5+SRA6,data=train)
best.model.lm5<-lm(donations~rho+TG2+UG1+SRA3+SRA4+SRA5+SRA6,data=train)
stargazer(best.model.lm5, best.model.lm4,best.model.lm2,best.model.lm1,best.model.lm3, type="latex",
dep.var.labels=c("Log(Donations)"))
mean((test$donated - predict.lm(best.model.lm1, test)) ^ 2)
mean((test$donated - predict.lm(best.model.lm5, test)) ^ 2)
mean((test$donated - predict.lm(best.model.lm4, test)) ^ 2)
mean((test$donated - predict.lm(best.model.lm2, test)) ^ 2)
mean((test$donated - predict.lm(best.model.lm1, test)) ^ 2)
mean((test$donated - predict.lm(best.model.lm3, test)) ^ 2)
x<-model.matrix(y~.,lbw.for.lm)[,-1]
y<-lbw.for.lm$y
y
cv.out<-cv.glmnet(x,y,alpha=1,type.measure="mse")
lambda_min<-cv.out$lambda.min
lambda_1se<-cv.out$lambda.1se
coef(cv.out,s=lambda_min)
coef(cv.out,s=lambda_min)
x<-model.matrix(y~.,lbw.for.lm)[,-1]
y<-lbw.for.lm$y
cv.out<-cv.glmnet(x,y,alpha=1,type.measure="mse")
lambda_min<-cv.out$lambda.min
lambda_1se<-cv.out$lambda.1se
coef(cv.out,s=lambda_min)
coef(cv.out,s=lambda_1se)
coef(cv.out,s=lambda_1se)
x<-model.matrix(y~.,lbw.for.lm)[,-1]
y<-lbw.for.lm$y
cv.out<-cv.glmnet(x,y,alpha=1,type.measure="mse")
lambda_min<-cv.out$lambda.min
lambda_1se<-cv.out$lambda.1se
coef(cv.out,s=lambda_min)
coef(cv.out,s=lambda_1se)
lbw.for.lm1<-within(test, {
y<-donations
ID<-NULL
ResponseId<-NULL
GENDER<-NULL
CLASS_YR<-NULL
MAJOR<-NULL
current_donor_status<-NULL
DNR_GIVING<-NULL
DNR_TOTAL_YEARS<-NULL
first_gift<-NULL
last_gift<-NULL
last_gift_amount<-NULL
last_gift_for<-NULL
donations<-NULL
d<-NULL
donations1<-NULL
split<-NULL
sigma<-NULL
donated<-NULL
SRAtotal<-NULL
SRAmoney<-NULL
#   SRA1<-NULL
#   SRA2<-NULL
#   SRA3<-NULL
#   SRA4<-NULL
#   SRA5<-NULL
#   SRA6<-NULL
#   SRA7<-NULL
#   SRA8<-NULL
#   SRA9<-NULL
#   SRA10<-NULL
})
lbw.for.lm1<-na.omit(lbw.for.lm1)
xtest<-model.matrix(y~.,lbw.for.lm1)[,-1]
ytest<-lbw.for.lm1$y
yhat<-predict(cv.out,s=lambda_min,newx=xtest)
mse<-mean((ytest-yhat)^2)
mse
stargazer(lm(donations~SRA4+SRA6), type="latex",
dep.var.labels=c("Log(Donations)"),
covariate.labels=c("SRA4", "SRA6"))
stargazer(lm(donations~SRA4+SRA6, data=data), type="latex",
dep.var.labels=c("Log(Donations)"),
covariate.labels=c("SRA4", "SRA6"))
m<-lars(x,y,type="lasso")
covTest(m,x,y)
mse<-mean((ytest-yhat)^2)
mse
