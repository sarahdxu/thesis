data1<-data[,c("donations", "alpha","rho", "sigma", "UG1", "UG2", "TG1", "TG2","avgreturn","PGG",
"SRA1", "SRA2","SRA3", "SRA4", "SRA5", "SRA6", "SRA7", "SRA8", "SRA9", "SRA10",
"SRAtotal", "SRAmoney")]
data2<-data[,c("donations", "alpha","UG1", "UG2", "TG1", "TG2","avgreturn","PGG",
"SRA1", "SRA2","SRA3", "SRA4", "SRA5", "SRA6", "SRA7", "SRA8", "SRA9", "SRA10",
"SRAtotal", "SRAmoney")]
data3<-data[,c("donations", "alpha","UG1", "UG2", "TG1", "TG2","avgreturn","PGG",
"SRAtotal", "SRAmoney")]
data4<-data[,c("donated", "alpha","UG1", "UG2", "TG1", "TG2","avgreturn","PGG",
"SRAtotal", "SRAmoney")]
data5<-data[,c("donated", "alpha","rho", "sigma", "UG1", "UG2", "TG1", "TG2","avgreturn","PGG",
"SRA1", "SRA2","SRA3", "SRA4", "SRA5", "SRA6", "SRA7", "SRA8", "SRA9", "SRA10",
"SRAtotal", "SRAmoney")]
#continuous
regsubsets.out<-regsubsets(donations~alpha+rho+UG1+UG2+TG1+TG2+avgreturn+PGG+
SRA1+SRA2+SRA3+SRA4+SRA5+SRA6+SRA7+SRA8+SRA9+SRA10,#+
#SRAtotal+SRAmoney,
data=data,
nbest=1,
nvmax=NULL,
force.in=NULL, force.out=NULL,
method="exhaustive")
summary.out<-summary(regsubsets.out)
as.data.frame(summary.out$outmat)
plot(regsubsets.out,scale="adjr2",main="Adjusted R2")
which.max(summary.out$adjr2)
summary.out$which[6,]
best.model<-lm(donations~rho+SRA3+SRA4+SRA5+SRA6+SRA10,data=data)
best.model<-vglm(donations~rho+SRA3+SRA4+SRA5+SRA6+SRA10,data=data,
tobit(Lower=0,Upper=50))
summary(best.model)
stargazer(best.model,type="latex",
dep.var.labels=c("Donations"),
covariate.labels=c("Rho", "SRA3", "SRA4", "SRA5",
"SRA6", "SRA10"))
summary(best.model)
#logistic
install.packages("bestglm")
library(bestglm)
lbw.for.logistic<-within(data5, {
y<-donated
sigma<-NULL
donated<-NULL
SRAtotal<-NULL
SRAmoney<-NULL
#   SRA1<-NULL
#   SRA2<-NULL
#   SRA3<-NULL
#   SRA4<-NULL
#   SRA5<-NULL
#   SRA6<-NULL
#   SRA7<-NULL
#   SRA8<-NULL
#   SRA9<-NULL
#   SRA10<-NULL
})
res.bestglm<-
bestglm(Xy=lbw.for.logistic,
family=gaussian,
IC="AIC",
method="exhaustive")
res.bestglm$BestModels
best.model.log<-glm(donated~SRA3+SRA4+SRA8+SRA10,data=data)
summary(best.model.log)
best.subset<-regsubsets(y~.,lbw.for.logistic)
best.subset.summary<-summary(best.subset)
best.subset.summary$outmat
best.subset.by.cp<-which.min(best.subset.summary$cp)
best.subset.by.cp
stargazer(best.model.log, type="latex",
dep.var.labels=c("Donated"),
covariate.labels=c("SRA3", "SRA4", "SRA8", "SRA10"))
pR2(best.model.log)
lbw.for.glm<-within(data1, {
y<-donations
sigma<-NULL
donations<-NULL
SRAtotal<-NULL
SRAmoney<-NULL
#   SRA1<-NULL
#   SRA2<-NULL
#   SRA3<-NULL
#   SRA4<-NULL
#   SRA5<-NULL
#   SRA6<-NULL
#   SRA7<-NULL
#   SRA8<-NULL
#   SRA9<-NULL
#   SRA10<-NULL
})
res.best.glm<-
bestglm(Xy=lbw.for.glm,
family=gaussian,
IC="AIC",
method="exhaustive")
res.best.glm$BestModels
best.model.lm<-vglm(donations~rho,data=data, tobit(Lower=0,Upper=50))
summary(best.model.lm)
m<-lm(donations~rho,data=data)
stargazer(m, type="latex",
dep.var.labels=c("Donations"),
covariate.labels=c("Rho"))
summary(best.model.log)
best.subset<-regsubsets(y~.,lbw.for.glm)
best.subset.summary<-summary(best.subset)
best.subset.summary$outmat
best.subset.by.cp<-which.min(best.subset.summary$cp)
best.subset.by.cp
# install.packages("glmulti")
# library(glmulti)
# install.packages("rJava")
# library(rJava)
# glmulti.lm.out<-glmulti(donations~alpha+rho+UG1+UG2+TG1+TG2+avgreturn+PGG+
#           SRA1+SRA2+SRA3+SRA4+SRA5+SRA6+SRA7+SRA8+SRA9+SRA10+
#           SRAtotal+SRAmoney,data=data,
#         level=1,
#         method="h",
#         crit="aic",
#         confsetsize=5,
#         plotty=F,report=F,
#         fitfunction="lm")
pairs(data1)
cor(data1)
install.packages("leaps")
library(leaps)
#best subset continuous
m<-vglm(donations~alpha+ UG1 + UG2 + TG1 + TG2 + PGG + SRAmoney,
tobit(Lower=0, Upper=50),data=dat)
best.subset<-regsubsets(donations~., data1)
best.subset.summary<-summary(best.subset)
best.subset.summary$outmat
best.subset.by.adjr2<-which.max(best.subset.summary$adjr2)
best.subset.by.adjr2
best.subset.by.bic <- which.min(best.subset.summary$bic)
best.subset.by.bic
best.subset.by.cp <- which.min(best.subset.summary$cp)
best.subset.by.cp
#best subset binary
best.subset<-regsubsets(donated~., data5, nbest=1)
best.subset.summary<-summary(best.subset)
best.subset.summary$outmat
best.subset.by.adjr2<-which.max(best.subset.summary$adjr2)
best.subset.by.adjr2
best.subset.by.bic <- which.min(best.subset.summary$bic)
best.subset.by.bic
best.subset.by.cp <- which.min(best.subset.summary$cp)
best.subset.by.cp
#continuous forward/backwards/stepwise
#forward selection
#null=vglm(donations~1,data=data1,tobit(Lower=0, Upper=50))
#full=vglm(donations~alpha+rho+sigma+UG1+UG2+TG1+TG2+avgreturn+PGG+
#SRA1+SRA2+SRA3+SRA4+SRA5+SRA6+SRA7+SRA8+SRA9+SRA10+
#SRAtotal+SRAmoney,data=data1,tobit(Lower=0,Upper=50))
null=lm(donations~1, data=data1)
full=lm(donations~., data=data1)
step(null, scope=list(lower=null, upper=full), direction="forward")
#backwards selection
step(full, data=data2, direction="backward")
#stepwise regression
step(null, scop=list(upper=full), data=data2, direction="both")
#binary forward/backwards/stepwise
#forward selection
null=glm(donated~1, data=data5)
full=glm(donated~., data=data5)
step(null, scope=list(lower=null, upper=full), direction="forward")
#backwards selection
step(full, data=data5, direction="backward")
#stepwise regression
step(null, scope=list(upper=full), data=data5, direction="both")
dat<-data[,c("donated", "alpha", "rho", "UG1", "UG2",
"TG1", "TG2", "avgreturn", "PGG", "SRA1", "SRA2",
"SRA3", "SRA4", "SRA5", "SRA6", "SRA7", "SRA8", "SRA9", "SRA10")]
null=glm(donated~1, data=dat)
null
full=glm(donated~., data=dat)
full
step(null,scope=list(upper=full),data=dat,
direction="both")
dat<-data[,c("donations", "alpha", "rho", "UG1", "UG2",
"TG1", "TG2", "avgreturn", "PGG", "SRA1", "SRA2",
"SRA3", "SRA4", "SRA5", "SRA6", "SRA7", "SRA8", "SRA9", "SRA10")]
null=lm(donations~1, data=dat)
null
full=vglm(donations~alpha+rho+UG1+UG2+TG1+TG2+avgreturn+PGG+
SRA1+SRA2+SRA3+SRA4+SRA5+SRA6+SRA7+SRA8+SRA9+SRA10,
data=dat, tobit(Lower=0, Upper=50))
full=lm(donations~.,data=dat)
full
step(null,scope=list(upper=full),data=dat,
direction="both")
summary(vglm(donations~rho,data=data,
tobit(Lower=0,Upper=50)))
summary(censReg(donations~rho, data=dat, left=0, right=50))
#ridge/lasso
install.packages("glmnet")
library(glmnet)
x<-model.matrix(donations~., data1)[,-1]
y<-data1$donations
cv.out<-cv.glmnet(x,y,alpha=1,type.measure="mse")
lambda_min<-cv.out$lambda.min
lambda_1se<-cv.out$lambda.1se
coef(cv.out,s=lambda_min)
coef(cv.out,s=lambda_1se)
dat<-data[,c("donated", "alpha", "rho", "UG1", "UG2",
"TG1", "TG2", "avgreturn", "PGG", "SRA1", "SRA2",
"SRA3", "SRA4", "SRA5", "SRA6", "SRA7", "SRA8", "SRA9", "SRA10")]
xfactors<-model.matrix(donated~alpha+rho+UG1+UG2+
TG2+TG2+avgreturn+PGG+SRA1+SRA2+SRA3+
SRA4+SRA5+SRA6+SRA7+SRA8+SRA9+SRA10,
data=dat)[,-1]
y<-dat$donated
x<-as.matrix(xfactors)
cv.out<-cv.glmnet(xfactors,y,alpha=1, family="binomial", type.measure="mse")
plot(cv.out)
lambda_min<-cv.out$lambda.min
lambda_1se<-cv.out$lambda.1se
coef(cv.out,s=lambda_1se)
coef(cv.out,s=lambda_min)
lasso<-glm(donated~SRA3+SRA4, data=data)
stargazer(lasso, type="latex",
dep.var.labels=c("Donated"),
covariate.labels=c("SRA3", "SRA4"))
dat<-data[,c("donations", "alpha", "rho", "UG1", "UG2",
"TG1", "TG2", "avgreturn", "PGG", "SRA1", "SRA2",
"SRA3", "SRA4", "SRA5", "SRA6", "SRA7", "SRA8", "SRA9", "SRA10")]
xfactors<-model.matrix(donations~alpha+rho+UG1+UG2+
TG2+TG2+avgreturn+PGG+SRA1+SRA2+SRA3+
SRA4+SRA5+SRA6+SRA7+SRA8+SRA9+SRA10,
data=dat)[,-1]
y<-dat$donations
x<-as.matrix(xfactors)
cv.out<-cv.glmnet(x,y,alpha=1, family="gaussian",type.measure="mse")
plot(cv.out)
lambda_min<-cv.out$lambda.min
lambda_1se<-cv.out$lambda.1se
coef(cv.out,s=lambda_1se)
coef(cv.out,s=lambda_min)
install.packages("lars")
library(lars)
lasso<-lars(x,y,type="lasso")
summary(lasso)
plot(glmmod,xvar="lambda")
glmmod
cv.glmmod<-cv.glmnet(x,y,alpha=1)
plot(cv.glmmod)
(best.lambda<-cv.glmmod$lambda.min)
x<-model.matrix(donated~.,data4)[,-1]
y<-data4$donated
cv.out<-cv.glmnet(x,y,alpha=1,type.measure="mse")
lambda_min<-cv.out$lambda.min
lambda_1se<-cv.out$lambda.1se
coef(cv.out,s=lambda_min)
glmmod<-glmnet(x,y=as.factor(y),alpha=1,family="binomial")
plot(glmmod,xvar="lambda")
cv.glmmod<-cv.glmnet(x,y,alpha=1)
plot(cv.glmmod)
best.lambda<-cv.glmmod$lambda.min
coef(cv.glmmod,best.lambda)
#k-fold cross validation
yourData<-data[sample(nrow(data)),]
folds<-cut(seq(1,nrow(yourData)),breaks=5,labels=FALSE)
result<-list()
for(i in 1:5){
testIndexes<-which(folds==i,arr.ind=TRUE)
testData<-yourData[testIndexes,]
trainData<-yourData[-testIndexes,]
model<-lm(donations~alpha+UG1+UG2+TG1+TG2+PGG+SRAtotal,data=trainData)
result[[i]]<-predict(model,testData)
}
install.packages("caret")
library(caret)
install.packages("klaR")
library(klaR)
train_control<-trainControl(method="cv",number=10)
model<-train(donations~.,data=data3,trControl=train_control)
summary(model)
install.packages("RCurl")
install.packages("prettyR")
require(RCurl)
require(prettyR)
url <- "https://raw.githubusercontent.com/gastonstat/CreditScoring/master/CleanCreditScoring.csv"
cs_data <- getURL(url)
cs_data <- read.csv(textConnection(cs_data))
describe(cs_data)
classes <- cs_data[, "Status"]
predictors <- cs_data[, -match(c("Status", "Seniority", "Time", "Age", "Expenses",
"Income", "Assets", "Debt", "Amount", "Price", "Finrat", "Savings"), colnames(cs_data))]
#tobit
install.packages("AER")
library(AER)
install.packages("censReg")
library(censReg)
modela<-tobit(donations ~ alpha + UG1 + UG2 + TG1 + TG2 + PGG + SRAtotal, data=data, left=0, right=50)
modelb<-tobit(donations ~ alpha + UG1 + UG2 + TG1 + TG2 + PGG + SRAmoney, data=data, left=0)
stargazer(modela, type="latex",
dep.var.labels=c("Donations"),
covariate.labels=c("Alpha", "UG1", "UG2", "TG1",
"Reciprocity", "PGG", "SRAtotal"))
stargazer(modelb, type="latex",
dep.var.labels=c("Donations"),
covariate.labels=c("Alpha", "UG1", "UG2", "TG1",
"Reciprocity", "PGG", "SRAtotal"))
censReg(donations ~ alpha + UG1 + UG2 + TG1 + TG2 + PGG + SRAtotal, data=data, left=0, right=50)
install.packages("VGAM")
library(VGAM)
dat<-data[,c("donations", "donated", "alpha","rho", "UG1", "UG2", "TG1", "TG2", "PGG", "SRAmoney", "SRAtotal")]
summary(m<-vglm(donations~alpha+ UG1 + UG2 + TG1 + TG2 + PGG + SRAtotal,
tobit(Lower=0, Upper=100),data=dat))
summary(m<-vglm(donations~alpha,
tobit(Lower=0,Upper=50),data=dat))
summary(m<-vglm(donations~UG1,
tobit(Lower=0,Upper=50),data=dat))
summary(m<-vglm(donations~UG2,
tobit(Lower=0,Upper=50),data=dat))
summary(m<-vglm(donations~TG1,
tobit(Lower=0,Upper=50),data=dat))
summary(m<-vglm(donations~TG2,
tobit(Lower=0,Upper=50),data=dat))
summary(m<-vglm(donations~PGG,
tobit(Lower=0,Upper=50),data=dat))
summary(m<-vglm(donations~SRAtotal,
tobit(Lower=0,Upper=50),data=dat))
summary(m<-vglm(donations~alpha+ UG1 + UG2 + TG1 + TG2 + PGG + SRAtotal,
tobit(Lower=0,Upper=50),data=dat))
m0<-update(m,.~1)
1-as.vector(logLik(m)/logLik(m0))
ctable<-coef(summary(m))
pvals<-2*pt(abs(ctable[,"z value"]),df.residual(m),lower.tail=FALSE)
cbind(ctable,pvals)
dat$yhat<-fitted(m)[,1]
dat$rr<-resid(m,type="response")
dat$rp<-resid(m,type="pearson")[,1]
par(mfcol=c(2,3))
with(dat, {
plot(yhat, rr, main = "Fitted vs Residuals")
qqnorm(rr)
plot(yhat, rp, main = "Fitted vs Pearson Residuals")
qqnorm(rp)
plot(donations, rp, main = "Actual vs Pearson Residuals")
plot(donations, yhat, main = "Actual vs Fitted")
})
(r<-with(dat,cor(yhat,donations)))
r^2
#caret - cross validation - doesn't work
dat<-data[,c("donated", "alpha","rho", "sigma", "UG1", "UG2", "TG1", "TG2","avgreturn","PGG",
"SRA1", "SRA2","SRA3", "SRA4", "SRA5", "SRA6", "SRA7", "SRA8", "SRA9", "SRA10",
"SRAtotal", "SRAmoney")]
classes<-dat[,"donated"]
predictors<-dat[,c("alpha","UG1", "UG2", "TG1", "TG2", "PGG", "SRAtotal")]
train_set<-createDataPartition(classes, p=0.8,list=FALSE)
train_predictors<-predictors[train_set,]
train_classes<-classes[train_set]
test_predictors<-predictors[-train_set,]
test_classes<-classes[-train_set]
cv_splits<-createFolds(classes,k=10,returnTrain=TRUE)
cs_data_train<-dat[train_set,]
cs_data_test<-dat[-train_set,]
glmnet_grid <- expand.grid(alpha = c(0,  .1,  .2, .4, .6, .8, 1),
lambda = seq(.01, .2, length = 20))
glmnet_ctrl <- trainControl(method = "cv", number = 10)
glmnet_fit <- train(donated ~ ., data = cs_data_train,
method = "glmnet",
preProcess = c("center", "scale"),
tuneGrid = glmnet_grid,
trControl = glmnet_ctrl)
glmnet_fit
pred_classes <- predict(glmnet_fit, newdata = cs_data_test)
table(pred_classes)
pred_probs <- predict(glmnet_fit, newdata = cs_data_test, type = "prob")
head(pred_probs)
m<-vglm(donations~alpha, data=data, tobit(Lower=0, Upper=50))
summary(m)
tobit(donations ~ alpha, data=data, left=0, right=50)
library(AER)
library(censReg)
modela<-tobit(donations ~ alpha + UG1 + UG2 + TG1 + TG2 + PGG + SRAtotal, data=data, left=0, right=50)
install.packages("AER")
install.packages("AER")
library(AER)
tobit(donations ~ alpha, data=data, left=0, right=50)
summary(censReg(donations~alpha, data=dat, left=0, right=50))
install.packages("censReg")
library(censReg)
summary(censReg(donations~alpha, data=dat, left=0, right=50))
summary(censReg(donations~alpha, data=data, left=0, right=50))
t<-tobit(donations ~ alpha, data=data, left=0, right=50)
summary(t)
summary(censReg(donations~alpha, data=data, left=0, right=50))
fm <- t
fm0 <- update(fm, . ~ 1)
1 - as.vector(logLik(fm)/logLik(fm0))
t<-tobit(donations ~ UG1, data=data, left=0, right=50)
summary(t)
fm <- t
fm0 <- update(fm, . ~ 1)
1 - as.vector(logLik(fm)/logLik(fm0))
t<-tobit(donations ~ UG2, data=data, left=0, right=50)
summary(t)
fm <- t
fm0 <- update(fm, . ~ 1)
1 - as.vector(logLik(fm)/logLik(fm0))
t<-tobit(donations ~ TG1, data=data, left=0, right=50)
summary(t)
fm <- t
fm0 <- update(fm, . ~ 1)
1 - as.vector(logLik(fm)/logLik(fm0))
t<-tobit(donations ~ TG2, data=data, left=0, right=50)
summary(t)
t<-tobit(donations ~ PGG, data=data, left=0, right=50)
summary(t)
t<-tobit(donations ~ TG2, data=data, left=0, right=50)
summary(t)
t<-tobit(donations ~ PGG, data=data, left=0, right=50)
summary(t)
t<-tobit(donations ~ SRAtotal, data=data, left=0, right=50)
summary(t)
fm <- t
fm0 <- update(fm, . ~ 1)
1 - as.vector(logLik(fm)/logLik(fm0))
t<-tobit(donations ~ alpha, data=data, left=0, right=50)
fm <- t
fm0 <- update(fm, . ~ 1)
1 - as.vector(logLik(fm)/logLik(fm0))
t<-tobit(donations ~ UG1, data=data, left=0, right=50)
summary(t)
fm <- t
fm0 <- update(fm, . ~ 1)
1 - as.vector(logLik(fm)/logLik(fm0))
t<-tobit(donations ~ UG2, data=data, left=0, right=50)
summary(t)
fm <- t
fm0 <- update(fm, . ~ 1)
1 - as.vector(logLik(fm)/logLik(fm0))
t<-tobit(donations ~ TG1, data=data, left=0, right=50)
summary(t)
fm <- t
fm0 <- update(fm, . ~ 1)
1 - as.vector(logLik(fm)/logLik(fm0))
t<-tobit(donations ~ TG2, data=data, left=0, right=50)
summary(t)
fm <- t
fm0 <- update(fm, . ~ 1)
1 - as.vector(logLik(fm)/logLik(fm0))
t<-tobit(donations ~ PGG, data=data, left=0, right=50)
summary(t)
fm <- t
fm0 <- update(fm, . ~ 1)
1 - as.vector(logLik(fm)/logLik(fm0))
t<-tobit(donations ~ TG2, data=data, left=0, right=50)
summary(t)
fm <- t
fm0 <- update(fm, . ~ 1)
1 - as.vector(logLik(fm)/logLik(fm0))
t<-tobit(donations ~ SRAtotal, data=data, left=0, right=50)
summary(t)
fm <- t
fm0 <- update(fm, . ~ 1)
1 - as.vector(logLik(fm)/logLik(fm0))
t<-tobit(donations ~ alpha+UG1+UG2+TG1+TG2+PGG+SRAtotal, data=data, left=0, right=50)
summary(t)
fm <- t
fm0 <- update(fm, . ~ 1)
1 - as.vector(logLik(fm)/logLik(fm0))
t<-tobit(donations ~ SRAtotal, data=data, left=0, right=50)
summary(t)
mse<-mean(t$df.residual^2)
mse
t<-tobit(donations ~ alpha, data=data, left=0, right=50)
mse<-mean(t$df.residual^2)
mse
best.subset<-regsubsets(y~.,lbw.for.glm)
library(leaps)
best.subset<-regsubsets(y~.,lbw.for.glm)
best.subset.summary<-summary(best.subset)
best.subset.summary$outmat
best.subset.by.cp<-which.min(best.subset.summary$cp)
best.subset.by.cp
best.subset<-regsubsets(y~.,lbw.for.logistic)
best.subset.summary<-summary(best.subset)
best.subset.summary$outmat
best.subset.by.cp<-which.min(best.subset.summary$cp)
best.subset.by.cp
best.model.log<-glm(donated~SRA3+SRA4+SRA8+SRA10,data=data)
summary(best.model.log)
pR2(best.model.log)
library(pscl)
pR2(best.model.log)
best.model.lm<-vglm(donations~rho,data=data, tobit(Lower=0,Upper=50))
library(VGAM)
best.model.lm<-vglm(donations~rho,data=data, tobit(Lower=0,Upper=50))
summary(best.model.lm)
summary(tobit(donations~rho, data=data, Left=0, Right=50))
summary(censReg(donations~rho, data=data, Left=0, Right=50))
library(censReg)
summary(censReg(donations~rho, data=data, Left=0, Right=50))
summary(censReg(donations~rho, data=data, left=0, right=50))
t<-tobit(donations~rho,data=data,left=0,right=50)
t<-tobit(donations ~ alpha, data=data, left=0, right=50)
library(AER)
t<-tobit(donations ~ alpha, data=data, left=0, right=50)
modela<-tobit(donations ~ alpha + UG1 + UG2 + TG1 + TG2 + PGG + SRAtotal, data=data, left=0, right=50)
install.packages("AER")
library(AER)
install.packages("AER")
install.packages("AER")
library(AER)
modela<-tobit(donations ~ alpha + UG1 + UG2 + TG1 + TG2 + PGG + SRAtotal, data=data, left=0, right=50)
t<-tobit(donations~rho,data=data,left=0,right=50)
summary(t)
fm <- t
fm0 <- update(fm, . ~ 1)
1 - as.vector(logLik(fm)/logLik(fm0))
